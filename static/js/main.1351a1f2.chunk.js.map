{"version":3,"sources":["components/CircleSelector/CircleSelector.jsx","components/Circles/Circles.jsx","App.js","reportWebVitals.js","index.js"],"names":["CircleSelector","props","handleButtonChange","event","handleCircleSelect","target","value","selected","className","onClick","Circles","App","circle","setState","state","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SA6CiBA,EA1CM,SAACC,GAEpB,IAAMC,EAAqB,SAAAC,GACvBF,EAAMG,mBAAmBD,EAAME,OAAOC,QAK1C,OAFGL,EAAMM,SAGL,sBAAKC,UAAU,iBAAf,UACA,wBACIA,UAA8B,QAAnBP,EAAMM,SAAqB,WAAa,GACnDD,MAAM,MACNG,QAASP,EAHb,SAKwB,QAAnBD,EAAMM,SAAqB,oBAAsB,oBAEtD,wBACIC,UAA8B,QAAnBP,EAAMM,SAAqB,WAAa,GACnDD,MAAM,MACNG,QAASP,EAHb,SAKwB,QAAnBD,EAAMM,SAAqB,oBAAsB,oBAEtD,wBACIC,UAA8B,UAAnBP,EAAMM,SAAuB,WAAa,GACrDD,MAAM,QACNG,QAASP,EAHb,SAK4B,UAAnBD,EAAMM,SAAuB,oBAAsB,oBAE5D,wBACIC,UAA8B,SAAnBP,EAAMM,SAAsB,WAAa,GACpDD,MAAM,OACNG,QAASP,EAHb,SAKwB,SAAnBD,EAAMM,SAAsB,oBAAsB,wBC3B9CG,G,MATD,SAACT,GAAD,OACZ,sBAAKO,UAAU,UAAf,UACE,qBAAKA,UAA8B,QAAnBP,EAAMM,SAAqB,WAAa,KAAxD,eACA,qBAAKC,UAA8B,QAAnBP,EAAMM,SAAqB,WAAa,KAAxD,eACA,qBAAKC,UAA8B,UAAnBP,EAAMM,SAAuB,WAAa,KAA1D,eACA,qBAAKC,UAA8B,SAAnBP,EAAMM,SAAsB,WAAa,KAAzD,oBC4BSI,G,wDA7Bb,aAAc,IAAD,8BACX,gBAIFP,mBAAqB,SAACQ,GACpB,EAAKC,SAAS,CACZN,SAAUK,KALZ,EAAKE,MAAM,CAACP,SAAU,OAFX,E,0CAWb,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,qCACA,iCACE,cAAC,EAAD,CACED,SAAUQ,KAAKD,MAAMP,SACrBH,mBAAoBW,KAAKX,qBAE3B,cAAC,EAAD,CACEG,SAAUQ,KAAKD,MAAMP,qB,GAvBfS,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1351a1f2.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./CircleSelector.css\";\r\n\r\nconst CircleSelector = (props) => {\r\n    \r\n    const handleButtonChange = event => {\r\n        props.handleCircleSelect(event.target.value)\r\n    }\r\n\r\n    if(props.selected);\r\n\r\n    return (\r\n        <div className=\"CircleSelector\">\r\n        <button\r\n            className={props.selected === \"one\" ? \"selected\" : \"\"}\r\n            value=\"one\"\r\n            onClick={handleButtonChange}\r\n        >\r\n            {props.selected === \"one\" ? \"Circle 1 Selected\" : \"Select Circle 1\"}\r\n        </button>\r\n        <button\r\n            className={props.selected === \"two\" ? \"selected\" : \"\"}\r\n            value=\"two\"\r\n            onClick={handleButtonChange}\r\n        >\r\n            {props.selected === \"two\" ? \"Circle 2 Selected\" : \"Select Circle 2\"}\r\n        </button>\r\n        <button\r\n            className={props.selected === \"three\" ? \"selected\" : \"\"}\r\n            value=\"three\"\r\n            onClick={handleButtonChange}\r\n        >\r\n                {props.selected === \"three\" ? \"Circle 3 Selected\" : \"Select Circle 3\"}\r\n        </button>\r\n        <button\r\n            className={props.selected === \"four\" ? \"selected\" : \"\"}\r\n            value=\"four\"\r\n            onClick={handleButtonChange}\r\n        >\r\n            {props.selected === \"four\" ? \"Circle 4 Selected\" : \"Select Circle 4\"}\r\n        </button>\r\n        </div>\r\n    )\r\n};\r\n  \r\n  export default CircleSelector;","import React from 'react';\r\nimport \"./Circles.css\";\r\n\r\nconst Circles = (props) => (\r\n    <div className=\"Circles\">\r\n      <div className={props.selected === 'one' ? 'selected' : null}>1</div>\r\n      <div className={props.selected === 'two' ? 'selected' : null}>2</div>\r\n      <div className={props.selected === 'three' ? 'selected' : null}>3</div>\r\n      <div className={props.selected === 'four' ? 'selected' : null}>4</div>\r\n    </div>\r\n  );\r\n  \r\n  export default Circles;","import React, { Component } from 'react';\nimport CircleSelector from \"./components/CircleSelector/CircleSelector\";\nimport Circles from \"./components/Circles/Circles\";\nimport './App.css';\n\nclass App extends Component {\n  \n  constructor(){\n    super()\n    this.state={selected: 'one'}\n  }\n\n  handleCircleSelect = (circle) => {\n    this.setState({\n      selected: circle\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">UNIT 4 FINAL ASSESSMENT</header>\n        <main>\n          <CircleSelector\n            selected={this.state.selected}\n            handleCircleSelect={this.handleCircleSelect}\n          />\n          <Circles\n            selected={this.state.selected}\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}